# Production Profile (AWS)
# Application Configuration
spring.application.name=user-service
server.port=8081

# AWS Configuration for Production
aws.region=${AWS_REGION:eu-central-1}
# No hardcoded credentials - uses IAM roles/environment

# AWS Service Endpoints (use default AWS endpoints)
# aws.dynamodb.endpoint= (commented out for production)
# aws.sns.endpoint= (commented out for production)
# aws.sqs.endpoint= (commented out for production)

# SNS Topics for Production
aws.sns.user-topic-arn=${USER_EVENTS_TOPIC_ARN:arn:aws:sns:eu-central-1:123456789012:user-events}

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Event Publishing Configuration
events.user.enabled=${EVENTS_ENABLED:true}
events.retry.max-attempts=${EVENTS_RETRY_ATTEMPTS:3}
events.retry.delay-ms=${EVENTS_RETRY_DELAY:1000}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized

# Production Logging Configuration
logging.level.com.example.userservice=INFO
logging.level.software.amazon.awssdk=WARN
logging.level.org.springframework=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Production Security
server.error.include-stacktrace=never
server.error.include-message=never

# Performance Configuration
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false 